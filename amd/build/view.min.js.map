{"version":3,"file":"view.min.js","sources":["../src/view.js"],"sourcesContent":["define([\n    'core/ajax', 'core/toast', 'core/str'\n], function(ajax, toast, str) {\n\n    const hybridteaching_student_view_update = (sessionid, userid) => ajax.call([{\n        methodname: 'mod_hybridteaching_get_display_actions',\n        args: {\n            sessionid,\n            userid,\n        }\n    }])[0].done(response => {\n        return JSON.parse(response);\n    }).fail(err => {\n        // eslint-disable-next-line no-console\n        console.log(err);\n    });\n    const update_view = (sessionid, userid, timer = 0) => {\n        hybridteaching_student_view_update(sessionid, userid).done( r => {\n            r = JSON.parse(r);\n            var useform = false;\n            if (r.buttons === null || r.buttons == false ) {\n                clearInterval(timer);\n            } else {\n                var display = r.buttons;\n                if (!r.admin) {\n                    if (display == 'enter') {\n                        toast.add(str.get_string('entersession', 'hybridteaching'));\n                    } else {\n                        toast.add(str.get_string('exitsession', 'hybridteaching'));\n                    }\n                    var exitstr = str.get_string('exitsession', 'hybridteaching');\n                    exitstr.done(function(exitstring) {\n                        if (display == 'exit') {\n                            document.querySelector('#zonemessage').querySelector('.alert-info').textContent =\n                            exitstring;\n                        }\n                    });\n                    clearInterval(timer);\n                }\n\n                var forms = (document.getElementsByTagName('form'));\n                forms.forEach(form => {\n                    let formid = (form.getAttribute('id'));\n                    if (formid !== undefined && formid !== null) {\n                        useform = true;\n                    }\n                    if (useform && (display == 'enter' || display == 'exit')) {\n                        switch (formid) {\n                            case 'joinvc':\n                                if (display == 'enter') {\n                                    form.setAttribute('style', 'display: block;');\n                                } else {\n                                    form.setAttribute('style', 'display: none;');\n                                }\n                                break;\n                            case 'showqr':\n                                if (display == 'enter') {\n                                    form.setAttribute('style', 'display: block;');\n                                } else {\n                                    form.setAttribute('style', 'display: none;');\n                                }\n                                break;\n                            case 'registeratt':\n                                if (display == 'enter') {\n                                    form.setAttribute('style', 'display: block;');\n                                } else {\n                                    form.setAttribute('style', 'display: none;');\n                                }\n                                break;\n                            case 'finishatt':\n                                if (display == 'enter') {\n                                    form.setAttribute('style', 'display: none;');\n                                } else {\n                                    form.setAttribute('style', 'display: block;');\n                                }\n                                break;\n                            default:\n                                break;\n                        }\n                    }\n                });\n            }\n        });\n    };\n    return {\n        init: (sessionid, userid) => {\n            update_view(sessionid, userid);\n            hybridteaching_student_view_update(sessionid, userid);\n            var timer = setInterval(() => {\n                update_view(sessionid, userid, timer);}, 15000);\n        }\n    };\n});\n"],"names":["define","ajax","toast","str","hybridteaching_student_view_update","sessionid","userid","call","methodname","args","done","response","JSON","parse","fail","err","console","log","update_view","timer","r","useform","buttons","clearInterval","display","admin","add","get_string","exitstring","document","querySelector","textContent","getElementsByTagName","forEach","form","formid","getAttribute","setAttribute","init","setInterval"],"mappings":"AAAAA,iCAAO,CACH,YAAa,aAAc,aAC5B,SAASC,KAAMC,MAAOC,WAEfC,mCAAqC,CAACC,UAAWC,SAAWL,KAAKM,KAAK,CAAC,CACzEC,WAAY,yCACZC,KAAM,CACFJ,UAAAA,UACAC,OAAAA,WAEJ,GAAGI,MAAKC,UACDC,KAAKC,MAAMF,YACnBG,MAAKC,MAEJC,QAAQC,IAAIF,QAEVG,YAAc,SAACb,UAAWC,YAAQa,6DAAQ,EAC5Cf,mCAAmCC,UAAWC,QAAQI,MAAMU,IACxDA,EAAIR,KAAKC,MAAMO,OACXC,SAAU,KACI,OAAdD,EAAEE,SAAiC,GAAbF,EAAEE,QACxBC,cAAcJ,WACX,KACCK,QAAUJ,EAAEE,YACXF,EAAEK,MACY,SAAXD,QACAtB,MAAMwB,IAAIvB,IAAIwB,WAAW,eAAgB,mBAEzCzB,MAAMwB,IAAIvB,IAAIwB,WAAW,cAAe,mBAE9BxB,IAAIwB,WAAW,cAAe,kBACpCjB,MAAK,SAASkB,YACH,QAAXJ,UACAK,SAASC,cAAc,gBAAgBA,cAAc,eAAeC,YACpEH,eAGRL,cAAcJ,OAGLU,SAASG,qBAAqB,QACrCC,SAAQC,WACNC,OAAUD,KAAKE,aAAa,SAC5BD,MAAAA,SACAd,SAAU,GAEVA,UAAuB,SAAXG,SAAiC,QAAXA,gBAC1BW,YACC,aAOA,aAOA,cACc,SAAXX,QACAU,KAAKG,aAAa,QAAS,mBAE3BH,KAAKG,aAAa,QAAS,4BAG9B,YACc,SAAXb,QACAU,KAAKG,aAAa,QAAS,kBAE3BH,KAAKG,aAAa,QAAS,kCAWpD,CACHC,KAAM,CAACjC,UAAWC,UACdY,YAAYb,UAAWC,QACvBF,mCAAmCC,UAAWC,YAC1Ca,MAAQoB,aAAY,KACpBrB,YAAYb,UAAWC,OAAQa,SAAU"}